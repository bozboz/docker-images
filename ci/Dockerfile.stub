FROM ubuntu:20.04

LABEL maintainer="Bozboz"

ARG UID=1000
ARG GID=1000

USER root

WORKDIR /tmp

ENV IMAGE_USER=root
#ENV HOME=/home/$IMAGE_USER
ENV HOME=/root
ENV COMPOSER_HOME=$HOME/.composer

ENV DEBIAN_FRONTEND noninteractive
ENV TZ=UTC
ENV PATH="${HOME}/.composer/vendor/bin:${HOME}/.config/composer/vendor/bin:${HOME}/.symfony/bin:${PATH}"
ENV GOSS_VERSION="0.3.16"

RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
#RUN groupadd -g $GID $IMAGE_USER
#RUN adduser --disabled-password --gecos "" "${IMAGE_USER}" --uid="${UID}" --gid="${GID}"

############################################################
# Speedup DPKG and don't use cache for packages
############################################################
# Taken from here: https://gist.github.com/kwk/55bb5b6a4b7457bef38d
#
# this forces dpkg not to call sync() after package extraction and speeds up
# install
RUN echo "force-unsafe-io" > /etc/dpkg/dpkg.cfg.d/02apt-speedup \
    && echo "Acquire::http {No-Cache=True;};" > /etc/apt/apt.conf.d/no-cache \
    && echo 'APT::Install-Recommends "false";' > /etc/apt/apt.conf

RUN apt-get update \
    && apt-get install -yq \
        apt-transport-https \
        apt-utils \
        ca-certificates \
    && apt-get install -yq \
        build-essential \
        curl \
        libcurl4 \
        git \
        gnupg2 \
        gosu \
        jq \
        libc-client-dev \
        libcap2-bin \
        libpng-dev \
        openssh-client \
        rsync \
        sudo \
        unzip \
        zip \
        zlib1g-dev \
    && rm -rf /var/lib/apt/lists/* \
    && mkdir -p ~/.gnupg \
    && echo "disable-ipv6" >> ~/.gnupg/dirmngr.conf \
    && apt-key adv --homedir ~/.gnupg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys E5267A6C \
    && apt-key adv --homedir ~/.gnupg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C300EE8C \
    && echo "deb http://ppa.launchpad.net/ondrej/php/ubuntu focal main" > /etc/apt/sources.list.d/ppa_ondrej_php.list \
    && apt-get update \
    && apt-get install -y php{PHP_VERSION}-cli php{PHP_VERSION}-dev \
       php{PHP_VERSION}-sqlite3 php{PHP_VERSION}-gd \
       php{PHP_VERSION}-curl php{PHP_VERSION}-memcached php{PHP_VERSION}-imagick \
       php{PHP_VERSION}-imap php{PHP_VERSION}-mysql php{PHP_VERSION}-mbstring \
       php{PHP_VERSION}-xml php{PHP_VERSION}-zip php{PHP_VERSION}-bcmath php{PHP_VERSION}-soap \
       php{PHP_VERSION}-intl php{PHP_VERSION}-readline \
       php{PHP_VERSION}-msgpack php{PHP_VERSION}-igbinary php{PHP_VERSION}-ldap \
    && php -r "readfile('http://getcomposer.org/installer');" | php -- --install-dir=/usr/bin/ --filename=composer \
    && apt-get install -y mysql-client \
    && apt-get -y autoremove \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \
    && composer global require squizlabs/php_codesniffer overtrue/phplint \
    && curl -L https://phar.phpunit.de/phpcpd.phar -o phpcpd.phar \
    && chmod +x phpcpd.phar \
    && mv phpcpd.phar /usr/bin/phpcpd \
    && curl -sL https://get.symfony.com/cli/installer | bash - \
    && curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash \
    #&& echo "$IMAGE_USER  ALL = ( ALL ) NOPASSWD: ALL" >> /etc/sudoers \
    && curl -fsSL https://goss.rocks/install | GOSS_VER=v${GOSS_VERSION} sh

RUN apt-get purge -yq --auto-remove -o APT::AutoRemove::RecommendsImportant=false -o APT::AutoRemove::SuggestsImportant=false \
    apt-utils \
    build-essential \
    dpkg-dev \
    file \
    libc-client-dev \
    libc-dev \
    libpcre3-dev \
    pkg-config

RUN apt-get autoremove -yq --purge
RUN apt-get autoclean -yq
RUN apt-get clean
RUN rm -rf /var/cache/apt/ /var/lib/apt/lists/* /var/log/* /tmp/* /var/tmp/* /usr/share/doc /usr/share/doc-base /usr/share/groff/* /usr/share/info/* /usr/share/linda/* /usr/share/lintian/overrides/* /usr/share/locale/* /usr/share/man/* /usr/share/locale/* /usr/share/gnome/help/*/* /usr/share/doc/kde/HTML/*/* /usr/share/omf/*/*-*.emf
#RUN chown -R $IMAGE_USER:$IMAGE_USER $HOME
#RUN chmod -R 777 $HOME

COPY nvminit.sh /usr/bin/nvminit
COPY npm.sh /usr/bin/npm

RUN git config --global user.email "dev@bozboz.co.uk"
RUN git config --global user.name "Boz CI"

#USER $IMAGE_USER

WORKDIR /var/www/html
